---
name: code linting

on: pull_request

jobs:
  run-linting:
    runs-on: ubuntu-latest
    steps:
      # check-out repo and set-up python
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '^3.10'
      # set-up go
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16.1' # The Go version to download and use.
      # install actionlint
      - name: Install actionlint
        run: go install github.com/rhysd/actionlint/cmd/actionlint@latest
      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: >-
            venv-${{runner.os}}-${{steps.setup-python.outputs.python-version}}
            -${{ hashFiles('**/poetry.lock') }}
      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      # install root project, if required
      - name: Install library
        run: poetry install --no-interaction
      # install pre-commit hooks
      - name: Install pre-commit hooks
        run: |
          poetry run pre-commit install
      # run pre-commit linting
      - name: Run pre-commit linting
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure
